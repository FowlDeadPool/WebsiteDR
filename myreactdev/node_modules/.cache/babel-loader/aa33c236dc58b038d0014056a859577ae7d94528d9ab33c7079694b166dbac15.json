{"ast":null,"code":"var _jsxFileName = \"E:\\\\bsury\\\\Summer Vacation\\\\Smart_Project\\\\WebsiteDR\\\\myreactdev\\\\src\\\\pages\\\\ML_model.js\",\n  _s = $RefreshSig$();\n// import React, { useState} from \"react\";\n// import {useNavigate} from \"react-router-dom\";\n// import axios from \"axios\";\n\n// export default function ML_model(){\n//     const [respred,setrespred] = useState('');\n//     const navigate = useNavigate();\n//     const model_predict = () => {\n//         axios.post('http://127.0.0.1:5000/predict' ,{\n//             respred: respred\n//         })\n//         .then(function (response) {\n//             console.log(response);       \n//             navigate(\"/\")\n//         })\n//     }\n//     return ( \n//     <div>\n//         <h3> Result</h3>\n//         <form>\n//             <div> <input type=\"respred\" value={respred} onChange={(e) => setrespred(e.target.value)}/></div>\n//             <div>\n//                 <button type=\"button\" onClick={model_predict}>Predict</button>\n//             </div>\n//         </form>\n//     </div>\n//     );\n// }\n\n// $(document).ready(function () {\n//     // Init\n//     $('.image-section').hide();\n//     $('.loader').hide();\n//     $('#result').hide();\n\n//     // Upload Preview\n//     function readURL(input) {\n//         if (input.files && input.files[0]) {\n//             var reader = new FileReader();\n//             reader.onload = function (e) {\n//                 $('#imagePreview').css('background-image', 'url(' + e.target.result + ')');\n//                 $('#imagePreview').hide();\n//                 $('#imagePreview').fadeIn(650);\n//             }\n//             reader.readAsDataURL(input.files[0]);\n//         }\n//     }\n//     $(\"#imageUpload\").change(function () {\n//         $('.image-section').show();\n//         $('#btn-predict').show();\n//         $('#result').text('');\n//         $('#result').hide();\n//         readURL(this);\n//     });\n\n//     // Predict\n//     $('#btn-predict').click(function () {\n//         var form_data = new FormData($('#upload-file')[0]);\n\n//         // Show loading animation\n//         $(this).hide();\n//         $('.loader').show();\n\n//         // Make prediction by calling api /predict\n//         $.ajax({\n//             type: 'POST',\n//             url: '/predict',\n//             data: form_data,\n//             contentType: false,\n//             cache: false,\n//             processData: false,\n//             async: true,\n//             success: function (data) {\n//                 // Get and display the result\n//                 $('.loader').hide();\n//                 $('#result').fadeIn(600);\n//                 $('#result').text(' Result:  ' + data);\n//                 console.log('Success!');\n//             },\n//         });\n//     });\n\n// });\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [imagePreview, setImagePreview] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState('');\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = readerEvent => {\n        setImagePreview(readerEvent.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handlePredictClick = async () => {\n    const formData = new FormData();\n    const fileInput = document.getElementById('imageUpload');\n    if (fileInput.files.length > 0) {\n      formData.append('file', fileInput.files[0]);\n\n      // Show loading animation\n      setLoading(true);\n      try {\n        const response = await fetch('http://127.0.0.1:5000/predict', {\n          method: 'POST',\n          body: formData\n        });\n        const data = await response.json();\n        setResult('Result: ' + data);\n        setLoading(false);\n        console.log('Success!');\n      } catch (error) {\n        console.error('Error:', error);\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-section\",\n      style: {\n        display: imagePreview ? 'block' : 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      style: {\n        display: loading ? 'block' : 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\",\n      style: {\n        display: result ? 'block' : 'none'\n      },\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"imageUpload\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePredictClick,\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"7jv4LueqN0EZdngP6euSRHuhTC8=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUploader","_s","imagePreview","setImagePreview","loading","setLoading","result","setResult","handleImageChange","e","file","target","files","reader","FileReader","onload","readerEvent","readAsDataURL","handlePredictClick","formData","FormData","fileInput","document","getElementById","length","append","response","fetch","method","body","data","json","console","log","error","children","className","style","display","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/bsury/Summer Vacation/Smart_Project/WebsiteDR/myreactdev/src/pages/ML_model.js"],"sourcesContent":["// import React, { useState} from \"react\";\r\n// import {useNavigate} from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n\r\n// export default function ML_model(){\r\n//     const [respred,setrespred] = useState('');\r\n//     const navigate = useNavigate();\r\n//     const model_predict = () => {\r\n//         axios.post('http://127.0.0.1:5000/predict' ,{\r\n//             respred: respred\r\n//         })\r\n//         .then(function (response) {\r\n//             console.log(response);       \r\n//             navigate(\"/\")\r\n//         })\r\n//     }\r\n//     return ( \r\n//     <div>\r\n//         <h3> Result</h3>\r\n//         <form>\r\n//             <div> <input type=\"respred\" value={respred} onChange={(e) => setrespred(e.target.value)}/></div>\r\n//             <div>\r\n//                 <button type=\"button\" onClick={model_predict}>Predict</button>\r\n//             </div>\r\n//         </form>\r\n//     </div>\r\n//     );\r\n// }\r\n\r\n// $(document).ready(function () {\r\n//     // Init\r\n//     $('.image-section').hide();\r\n//     $('.loader').hide();\r\n//     $('#result').hide();\r\n\r\n//     // Upload Preview\r\n//     function readURL(input) {\r\n//         if (input.files && input.files[0]) {\r\n//             var reader = new FileReader();\r\n//             reader.onload = function (e) {\r\n//                 $('#imagePreview').css('background-image', 'url(' + e.target.result + ')');\r\n//                 $('#imagePreview').hide();\r\n//                 $('#imagePreview').fadeIn(650);\r\n//             }\r\n//             reader.readAsDataURL(input.files[0]);\r\n//         }\r\n//     }\r\n//     $(\"#imageUpload\").change(function () {\r\n//         $('.image-section').show();\r\n//         $('#btn-predict').show();\r\n//         $('#result').text('');\r\n//         $('#result').hide();\r\n//         readURL(this);\r\n//     });\r\n\r\n//     // Predict\r\n//     $('#btn-predict').click(function () {\r\n//         var form_data = new FormData($('#upload-file')[0]);\r\n\r\n//         // Show loading animation\r\n//         $(this).hide();\r\n//         $('.loader').show();\r\n\r\n//         // Make prediction by calling api /predict\r\n//         $.ajax({\r\n//             type: 'POST',\r\n//             url: '/predict',\r\n//             data: form_data,\r\n//             contentType: false,\r\n//             cache: false,\r\n//             processData: false,\r\n//             async: true,\r\n//             success: function (data) {\r\n//                 // Get and display the result\r\n//                 $('.loader').hide();\r\n//                 $('#result').fadeIn(600);\r\n//                 $('#result').text(' Result:  ' + data);\r\n//                 console.log('Success!');\r\n//             },\r\n//         });\r\n//     });\r\n\r\n// });\r\nimport React, { useState } from 'react';\r\n\r\nconst ImageUploader = () => {\r\n  const [imagePreview, setImagePreview] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState('');\r\n  \r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    \r\n    if (file) {\r\n      const reader = new FileReader();\r\n      \r\n      reader.onload = (readerEvent) => {\r\n        setImagePreview(readerEvent.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handlePredictClick = async () => {\r\n    const formData = new FormData();\r\n    const fileInput = document.getElementById('imageUpload');\r\n\r\n    if (fileInput.files.length > 0) {\r\n      formData.append('file', fileInput.files[0]);\r\n      \r\n      // Show loading animation\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/predict', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n\r\n        const data = await response.json();\r\n        setResult('Result: ' + data);\r\n        setLoading(false);\r\n        console.log('Success!');\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"image-section\" style={{ display: imagePreview ? 'block' : 'none' }}>\r\n        {/* Render your image preview here using imagePreview state */}\r\n      </div>\r\n      <div className=\"loader\" style={{ display: loading ? 'block' : 'none' }}>\r\n        {/* Render your loading animation here */}\r\n      </div>\r\n      <div id=\"result\" style={{ display: result ? 'block' : 'none' }}>\r\n        Result: {result}\r\n      </div>\r\n      <input type=\"file\" id=\"imageUpload\" onChange={handleImageChange} />\r\n      <button onClick={handlePredictClick}>Predict</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAE9B,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,MAAM,GAAIC,WAAW,IAAK;QAC/Bb,eAAe,CAACa,WAAW,CAACL,MAAM,CAACL,MAAM,CAAC;MAC5C,CAAC;MAEDO,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAExD,IAAIF,SAAS,CAACT,KAAK,CAACY,MAAM,GAAG,CAAC,EAAE;MAC9BL,QAAQ,CAACM,MAAM,CAAC,MAAM,EAAEJ,SAAS,CAACT,KAAK,CAAC,CAAC,CAAC,CAAC;;MAE3C;MACAP,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACF,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UAC5DC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEV;QACR,CAAC,CAAC;QAEF,MAAMW,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCxB,SAAS,CAAC,UAAU,GAAGuB,IAAI,CAAC;QAC5BzB,UAAU,CAAC,KAAK,CAAC;QACjB2B,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B7B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;EACF,CAAC;EAED,oBACEN,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAKqC,SAAS,EAAC,eAAe;MAACC,KAAK,EAAE;QAAEC,OAAO,EAAEpC,YAAY,GAAG,OAAO,GAAG;MAAO;IAAE;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9E,CAAC,eACN3C,OAAA;MAAKqC,SAAS,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,OAAO,EAAElC,OAAO,GAAG,OAAO,GAAG;MAAO;IAAE;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElE,CAAC,eACN3C,OAAA;MAAK4C,EAAE,EAAC,QAAQ;MAACN,KAAK,EAAE;QAAEC,OAAO,EAAEhC,MAAM,GAAG,OAAO,GAAG;MAAO,CAAE;MAAA6B,QAAA,GAAC,UACtD,EAAC7B,MAAM;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACN3C,OAAA;MAAO6C,IAAI,EAAC,MAAM;MAACD,EAAE,EAAC,aAAa;MAACE,QAAQ,EAAErC;IAAkB;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnE3C,OAAA;MAAQ+C,OAAO,EAAE5B,kBAAmB;MAAAiB,QAAA,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACzC,EAAA,CA7DID,aAAa;AAAA+C,EAAA,GAAb/C,aAAa;AA+DnB,eAAeA,aAAa;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}